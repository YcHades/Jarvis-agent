好的，我将把本次任务中获得的经验、反思和工具优化建议进行整合，形成一份更全面的参考资料，以便在未来的任务中能够更高效地应用。

---

<knowledge>
### AI 代理任务执行知识库

#### 一、通用任务执行原则与方法论

1.  **信息中心原则与上下文利用：**
    *   **实践：** 在每个步骤开始前，主动回顾并整合所有可用的信息，包括任务描述、工具输出（尤其是详细的日志和反馈）、与同事的交流内容（即使是评估系统在背景中提供的模拟对话内容）。这些信息是指导下一步行动的关键。
    *   **要点：** 避免信息孤岛，确保每一次决策都基于最全面、最新的上下文。

2.  **战略性工具选择与优先级：**
    *   **实践：** 针对不同的任务需求，灵活选择最合适、最高效的工具，避免“一根筋”使用单一方法。
    *   **优先级：**
        *   **直接优先：** 对于具有明确接口（如API、WebDAV、命令行工具）的任务（例如文件下载、数据传输），优先考虑使用 `run_cmd` 等直接访问底层能力的工具。这通常比模拟用户界面操作更稳定、高效、不易受前端变化影响。
        *   **浏览器 UI 辅助：** 当需要与网页进行复杂交互（如登录、表单填写、导航到特定页面），且没有直接 API 可用时，使用 `browser_navigate`, `browser_type_text`, `browser_click` 等工具模拟用户操作。
        *   **视觉辅助（有限）：** `browser_extract_content_by_vision` 可用于辅助理解页面布局或提取非结构化、视觉显著的信息，但对于精确解析结构化数据（如表格、列表）或识别特定交互元素，其能力有限。

3.  **迭代式执行与动态适应：**
    *   **实践：** 将复杂任务分解为小步骤，每完成一步都进行验证。在执行过程中，如果遇到问题或工具反馈异常，不要固守原计划。
    *   **自适应：** 页面元素索引变化、网络延迟、API 响应异常等都是常态。学会根据实时的工具反馈调整策略，例如，当点击失败时，立刻重新获取浏览器状态以更新元素索引。

4.  **严格的验证与错误分析：**
    *   **实践：** 每次工具调用后，不仅要检查工具是否成功执行，更要验证执行结果是否符合预期。例如，登录后检查 URL 或页面内容是否正确，下载后检查文件是否存在且内容完整。
    *   **反思：** 对于失败的步骤，深入分析根本原因（是信息缺失、元素索引变化、工具限制、还是逻辑错误），并据此调整策略或工具选择。

5.  **理解任务依赖与异步性：**
    *   **实践：** 明确任务步骤之间的依赖关系。如果某个步骤依赖于外部反馈（如等待他人回复），且当前工具无法实时监听，则需要向用户反馈并等待指令，或者主动探索其他途径获取信息（如主动去查找可能存放信息的公共位置）。
    *   **挑战：** 当前AI代理难以进行实时异步沟通，这意味着在等待人类同事回复时，无法主动监听。解决方法是：明确告知用户此限制，并依赖用户在收到回复后提供信息。或者，如果任务允许，主动去寻找信息（例如，在OwnCloud上搜索文件）。

#### 二、工具使用最佳实践与优化建议

以下是根据本次任务经验，对常用工具的优化描述和使用指导：

1.  **`browser_click`**
    *   **工具描述：** 在浏览器当前页面中，根据元素索引点击页面元素。如果元素具有链接，支持新标签页打开链接。在动态页面或元素索引可能变化的情况下，建议在点击前重新使用 `browser_get_browser_state` 获取最新元素信息以确保准确性。
    *   **工具指令：** 如果点击操作失败，请重新获取浏览器状态并检查目标元素的最新索引。

2.  **`browser_extract_content_by_vision`**
    *   **工具描述：** 根据指令，使用视觉模型提取当前浏览器的标签页中的相关内容。该工具适用于提取非结构化或视觉上显著的信息。但可能不适用于精确解析表格、列表或其他复杂结构化数据，或在某些页面上识别能力受限。
    *   **工具指令：** 如果视觉模型无法提供所需信息，请考虑使用 `browser_get_browser_state` 检查可交互元素，或尝试通过其他工具（如 `run_cmd` 结合 API/WebDAV）获取数据。

3.  **`browser_get_browser_state`**
    *   **工具描述：** 获取当前浏览器状态，包括：当前浏览器显示的标签页的url、title；当前浏览器打开的所有标签页信息；当前浏览器显示的标签页的可见交互元素信息（包括元素index、tag、text，以及可能有的href）。该工具在需要识别页面上的可操作元素（如输入框、按钮、链接）时至关重要，尤其是在页面内容动态变化后。但请注意，它可能无法捕获所有视觉可见但非标准交互的元素（例如，图片上的文字、复杂表格数据等）。
    *   **工具指令：** 在页面内容预期会发生变化（如登录后、搜索后、点击提交后）时，务必重新获取浏览器状态以确保获取到最新的可交互元素信息。如果无法通过此工具获取到所需信息，可能需要考虑页面渲染方式或切换策略。

4.  **`browser_navigate`**
    *   **工具描述：** 使用浏览器导航至指定 URL，支持在新标签页打开。当需要访问新网站或在不中断当前工作流的情况下打开辅助页面时，可以使用 `new_tab=True`。
    *   **工具指令：** 导航完成后，请使用 `browser_get_browser_state` 确认页面加载情况及交互元素。

5.  **`browser_wait`**
    *   **工具描述：** 停顿等待一定时长，常用于等待浏览器页面元素的更新、加载或动态内容渲染。在执行点击、提交、搜索等可能导致页面内容异步变化的动作后，建议使用此工具等待页面稳定，以确保后续操作能够识别到最新的元素。
    *   **工具指令：** 等待结束后，请务必使用 `browser_get_browser_state` 验证页面状态是否已更新到预期。

6.  **`run_cmd`**
    *   **工具描述：** 执行一个完整的 shell 命令字符串，并返回执行结果。此工具提供对系统命令行环境的直接访问能力，适用于执行文件系统操作（如创建、移动、下载文件）、网络请求（如使用 curl、wget）、进程管理、或任何其他通过命令行可完成的任务。当浏览器前端操作受限或需要更底层、更直接的系统交互时，应优先考虑使用此工具。
    *   **工具指令：** 请仔细检查命令执行结果。如果命令执行失败或未返回预期结果，请检查命令语法、权限、以及相关依赖是否正确。

#### 三、平台特定操作指南

1.  **RocketChat 交互：**
    *   **用户查找与聊天：**
        *   首先尝试通过全局搜索（通常位于主界面或侧边栏的搜索图标）搜索用户名。如果搜索结果不明确或点击失败，重新获取浏览器状态。
        *   元素索引在多次点击或页面刷新后可能会发生变化，每次点击前重新获取 `browser_get_browser_state` 是稳妥的做法。
        *   输入消息后，通过 `browser_send_keys` 发送 `Enter` 键来提交消息。
    *   **消息接收（局限性）：** 目前无法主动监听 RocketChat 的新消息。如果任务依赖于接收对方回复，则需要外部（用户）提供回复内容作为新的输入，或者在没有明确接口的情况下，主动去推断和寻找信息。

2.  **OwnCloud 文件操作：**
    *   **前端界面限制：** OwnCloud 的浏览器前端文件列表可能无法被 `browser_get_browser_state` 完全解析，或视觉模型无法准确识别。因此，不应过度依赖浏览器 UI 进行文件浏览和下载。
    *   **推荐方法：WebDAV 访问：** OwnCloud 天然支持 WebDAV 协议，这是进行文件操作（列表、下载、上传）最稳定和推荐的方式。
        *   **WebDAV URL 结构：** 通常为 `http://your-owncloud-domain/remote.php/webdav/`。
        *   **认证：** 使用 OwnCloud 登录凭据 (`username:password`) 进行 HTTP Basic Authentication。
        *   **命令行工具：** 使用 `run_cmd` 结合 `curl` 或 `wget` 进行操作。
            *   **列出目录内容：** `run_cmd("curl -u username:password http://the-agent-company.com:8092/remote.php/webdav/path/to/directory/")`
            *   **下载文件：** `run_cmd("curl -u username:password -o /workspace/local_filename.ext http://the-agent-company.com:8092/remote.php/webdav/path/to/file/filename.ext")`
            *   **上传文件：** `run_cmd("curl -u username:password --upload-file /workspace/local_filename.csv http://the-agent-company.com:8092/remote.php/webdav/Documents/Administrative%20Specialist/valid-quotes.csv")` (注意：上传路径需要确保目录存在，且文件名包含在上传URL中)
        *   **路径编码：** WebDAV 路径中的空格应替换为 `%20`。

</knowledge>